Layout/EmptyLinesAroundAttributeAccessor:
  Description: "Keep blank lines around attribute accessors."
  StyleGuide: '#empty-lines-around-attribute-accessor'
  Enabled: true
  VersionAdded: '0.83'
  VersionChanged: '0.84'
  AllowAliasSyntax: true
  AllowedMethods:
    - alias_method
    - public
    - protected
    - private

Layout/SpaceAroundMethodCallOperator:
  Description: 'Checks method call operators to not have spaces around them.'
  Enabled: true
  VersionAdded: '0.82'

Lint/RaiseException:
  Description: Checks for `raise` or `fail` statements which are raising `Exception` class.
  StyleGuide: '#raise-exception'
  Enabled: true
  VersionAdded: '0.81'
  AllowedImplicitNamespaces:
    - 'Gem'

Metrics/BlockLength:
  Description: 'Avoid long blocks with many lines.'
  Enabled: true
  VersionAdded: '0.44'
  VersionChanged: '1.5'
  CountComments: false  # count full line comments?
  Max: 25
  CountAsOne: []
  ExcludedMethods: [] # deprecated, retained for backwards compatibility
  IgnoredMethods:
    # By default, exclude the `#refine` method, as it tends to have larger
    # associated blocks.
    - refine
  Exclude:
    - '**/*.gemspec'
    - 'spec/**/*'
    - 'test/**/*'

Style/Documentation:
  Description: 'Document classes and non-namespace modules.'
  Enabled: true
  VersionAdded: '0.9'
  Exclude:
    - 'spec/**/*'
    - 'test/**/*'

Style/HashEachMethods:
  Description: 'Use Hash#each_key and Hash#each_value.'
  StyleGuide: '#hash-each'
  Enabled: true
  VersionAdded: '0.80'
  Safe: false

Style/HashTransformKeys:
  Description: 'Prefer `transform_keys` over `each_with_object` and `map`.'
  Enabled: true
  VersionAdded: '0.80'
  Safe: false

Style/HashTransformValues:
  Description: 'Prefer `transform_values` over `each_with_object` and `map`.'
  Enabled: true
  VersionAdded: '0.80'
  Safe: false

Layout/ExtraSpacing:
  Description: 'Do not use unnecessary spacing.'
  Enabled: false
  VersionAdded: '0.49'
  # When true, allows most uses of extra spacing if the intent is to align
  # things with the previous or next line, not counting empty lines or comment
  # lines.
  AllowForAlignment: true
  # When true, allows things like 'obj.meth(arg)  # comment',
  # rather than insisting on 'obj.meth(arg) # comment'.
  # If done for alignment, either this OR AllowForAlignment will allow it.
  AllowBeforeTrailingComments: false
  # When true, forces the alignment of `=` in assignments on consecutive lines.
  ForceEqualSignAlignment: false

Layout/SpaceAroundOperators:
  Description: 'Use a single space around operators.'
  StyleGuide: '#spaces-operators'
  Enabled: false
  VersionAdded: '0.49'
  # When `true`, allows most uses of extra spacing if the intent is to align
  # with an operator on the previous or next line, not counting empty lines
  # or comment lines.
  AllowForAlignment: true
  EnforcedStyleForExponentOperator: no_space
  SupportedStylesForExponentOperator:
    - space
    - no_space

Style/ExpandPathArguments:
  Description: "Use `expand_path(__dir__)` instead of `expand_path('..', __FILE__)`."
  Enabled: false
  VersionAdded: '0.53'

Style/FrozenStringLiteralComment:
  Description: >-
                 Add the frozen_string_literal comment to the top of files
                 to help transition to frozen string literals by default.
  Enabled: true
  VersionAdded: '0.36'
  VersionChanged: '0.79'
  EnforcedStyle: always
  SupportedStyles:
    # `always` will always add the frozen string literal comment to a file
    # regardless of the Ruby version or if `freeze` or `<<` are called on a
    # string literal. It is possible that this will create errors.
    - always
    # `always_true` will add the frozen string literal comment to a file,
    # similarly to the `always` style, but will also change any disabled
    # comments (e.g. `# frozen_string_literal: false`) to be enabled.
    - always_true
    # `never` will enforce that the frozen string literal comment does not
    # exist in a file.
    - never
  SafeAutoCorrect: false
  Exclude:
    - 'bin/cashier'

Style/RedundantFileExtensionInRequire:
  Description: >-
                  Checks for the presence of superfluous `.rb` extension in
                  the filename provided to `require` and `require_relative`.
  StyleGuide: '#no-explicit-rb-to-require'
  Enabled: true
  VersionAdded: '0.88'
  Exclude:
    - 'bin/cashier'

Style/RegexpLiteral:
  Description: 'Use / or %r around regular expressions.'
  StyleGuide: '#percent-r'
  Enabled: true
  VersionAdded: '0.9'
  VersionChanged: '0.30'
  EnforcedStyle: percent_r
  # slashes: Always use slashes.
  # percent_r: Always use `%r`.
  # mixed: Use slashes on single-line regexes, and `%r` on multi-line regexes.
  SupportedStyles:
    - slashes
    - percent_r
    - mixed
  # If `false`, the cop will always recommend using `%r` if one or more slashes
  # are found in the regexp string.
  AllowInnerSlashes: false
